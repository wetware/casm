// Code generated by capnpc-go. DO NOT EDIT.

package survey

import (
	strconv "strconv"

	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type SurveyRequest struct{ capnp.Struct }

// SurveyRequest_TypeID is the unique identifier for the type SurveyRequest.
const SurveyRequest_TypeID = 0xf0d8bcfa3bb39552

func NewSurveyRequest(s *capnp.Segment) (SurveyRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return SurveyRequest{st}, err
}

func NewRootSurveyRequest(s *capnp.Segment) (SurveyRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return SurveyRequest{st}, err
}

func ReadRootSurveyRequest(msg *capnp.Message) (SurveyRequest, error) {
	root, err := msg.Root()
	return SurveyRequest{root.Struct()}, err
}

func (s SurveyRequest) String() string {
	str, _ := text.Marshal(0xf0d8bcfa3bb39552, s.Struct)
	return str
}

func (s SurveyRequest) Src() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s SurveyRequest) HasSrc() bool {
	return s.Struct.HasPtr(0)
}

func (s SurveyRequest) SetSrc(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s SurveyRequest) Distance() uint8 {
	return s.Struct.Uint8(0)
}

func (s SurveyRequest) SetDistance(v uint8) {
	s.Struct.SetUint8(0, v)
}

func (s SurveyRequest) Namespace() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s SurveyRequest) HasNamespace() bool {
	return s.Struct.HasPtr(1)
}

func (s SurveyRequest) NamespaceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s SurveyRequest) SetNamespace(v string) error {
	return s.Struct.SetText(1, v)
}

// SurveyRequest_List is a list of SurveyRequest.
type SurveyRequest_List struct{ capnp.List }

// NewSurveyRequest creates a new list of SurveyRequest.
func NewSurveyRequest_List(s *capnp.Segment, sz int32) (SurveyRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return SurveyRequest_List{l}, err
}

func (s SurveyRequest_List) At(i int) SurveyRequest { return SurveyRequest{s.List.Struct(i)} }

func (s SurveyRequest_List) Set(i int, v SurveyRequest) error { return s.List.SetStruct(i, v.Struct) }

func (s SurveyRequest_List) String() string {
	str, _ := text.MarshalList(0xf0d8bcfa3bb39552, s.List)
	return str
}

// SurveyRequest_Future is a wrapper for a SurveyRequest promised by a client call.
type SurveyRequest_Future struct{ *capnp.Future }

func (p SurveyRequest_Future) Struct() (SurveyRequest, error) {
	s, err := p.Future.Struct()
	return SurveyRequest{s}, err
}

type SurveyResponse struct{ capnp.Struct }

// SurveyResponse_TypeID is the unique identifier for the type SurveyResponse.
const SurveyResponse_TypeID = 0xab0d70fa40685466

func NewSurveyResponse(s *capnp.Segment) (SurveyResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SurveyResponse{st}, err
}

func NewRootSurveyResponse(s *capnp.Segment) (SurveyResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SurveyResponse{st}, err
}

func ReadRootSurveyResponse(msg *capnp.Message) (SurveyResponse, error) {
	root, err := msg.Root()
	return SurveyResponse{root.Struct()}, err
}

func (s SurveyResponse) String() string {
	str, _ := text.Marshal(0xab0d70fa40685466, s.Struct)
	return str
}

func (s SurveyResponse) Namespace() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SurveyResponse) HasNamespace() bool {
	return s.Struct.HasPtr(0)
}

func (s SurveyResponse) NamespaceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SurveyResponse) SetNamespace(v string) error {
	return s.Struct.SetText(0, v)
}

func (s SurveyResponse) Envelope() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s SurveyResponse) HasEnvelope() bool {
	return s.Struct.HasPtr(1)
}

func (s SurveyResponse) SetEnvelope(v []byte) error {
	return s.Struct.SetData(1, v)
}

// SurveyResponse_List is a list of SurveyResponse.
type SurveyResponse_List struct{ capnp.List }

// NewSurveyResponse creates a new list of SurveyResponse.
func NewSurveyResponse_List(s *capnp.Segment, sz int32) (SurveyResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SurveyResponse_List{l}, err
}

func (s SurveyResponse_List) At(i int) SurveyResponse { return SurveyResponse{s.List.Struct(i)} }

func (s SurveyResponse_List) Set(i int, v SurveyResponse) error { return s.List.SetStruct(i, v.Struct) }

func (s SurveyResponse_List) String() string {
	str, _ := text.MarshalList(0xab0d70fa40685466, s.List)
	return str
}

// SurveyResponse_Future is a wrapper for a SurveyResponse promised by a client call.
type SurveyResponse_Future struct{ *capnp.Future }

func (p SurveyResponse_Future) Struct() (SurveyResponse, error) {
	s, err := p.Future.Struct()
	return SurveyResponse{s}, err
}

type SurveyPacket struct{ capnp.Struct }
type SurveyPacket_Which uint16

const (
	SurveyPacket_Which_request  SurveyPacket_Which = 0
	SurveyPacket_Which_response SurveyPacket_Which = 1
)

func (w SurveyPacket_Which) String() string {
	const s = "requestresponse"
	switch w {
	case SurveyPacket_Which_request:
		return s[0:7]
	case SurveyPacket_Which_response:
		return s[7:15]

	}
	return "SurveyPacket_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// SurveyPacket_TypeID is the unique identifier for the type SurveyPacket.
const SurveyPacket_TypeID = 0xbb55570bc0a87435

func NewSurveyPacket(s *capnp.Segment) (SurveyPacket, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SurveyPacket{st}, err
}

func NewRootSurveyPacket(s *capnp.Segment) (SurveyPacket, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SurveyPacket{st}, err
}

func ReadRootSurveyPacket(msg *capnp.Message) (SurveyPacket, error) {
	root, err := msg.Root()
	return SurveyPacket{root.Struct()}, err
}

func (s SurveyPacket) String() string {
	str, _ := text.Marshal(0xbb55570bc0a87435, s.Struct)
	return str
}

func (s SurveyPacket) Which() SurveyPacket_Which {
	return SurveyPacket_Which(s.Struct.Uint16(0))
}
func (s SurveyPacket) Request() (SurveyRequest, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != request")
	}
	p, err := s.Struct.Ptr(0)
	return SurveyRequest{Struct: p.Struct()}, err
}

func (s SurveyPacket) HasRequest() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s SurveyPacket) SetRequest(v SurveyRequest) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated SurveyRequest struct, preferring placement in s's segment.
func (s SurveyPacket) NewRequest() (SurveyRequest, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewSurveyRequest(s.Struct.Segment())
	if err != nil {
		return SurveyRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s SurveyPacket) Response() (SurveyResponse, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != response")
	}
	p, err := s.Struct.Ptr(0)
	return SurveyResponse{Struct: p.Struct()}, err
}

func (s SurveyPacket) HasResponse() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s SurveyPacket) SetResponse(v SurveyResponse) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResponse sets the response field to a newly
// allocated SurveyResponse struct, preferring placement in s's segment.
func (s SurveyPacket) NewResponse() (SurveyResponse, error) {
	s.Struct.SetUint16(0, 1)
	ss, err := NewSurveyResponse(s.Struct.Segment())
	if err != nil {
		return SurveyResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// SurveyPacket_List is a list of SurveyPacket.
type SurveyPacket_List struct{ capnp.List }

// NewSurveyPacket creates a new list of SurveyPacket.
func NewSurveyPacket_List(s *capnp.Segment, sz int32) (SurveyPacket_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return SurveyPacket_List{l}, err
}

func (s SurveyPacket_List) At(i int) SurveyPacket { return SurveyPacket{s.List.Struct(i)} }

func (s SurveyPacket_List) Set(i int, v SurveyPacket) error { return s.List.SetStruct(i, v.Struct) }

func (s SurveyPacket_List) String() string {
	str, _ := text.MarshalList(0xbb55570bc0a87435, s.List)
	return str
}

// SurveyPacket_Future is a wrapper for a SurveyPacket promised by a client call.
type SurveyPacket_Future struct{ *capnp.Future }

func (p SurveyPacket_Future) Struct() (SurveyPacket, error) {
	s, err := p.Future.Struct()
	return SurveyPacket{s}, err
}

func (p SurveyPacket_Future) Request() SurveyRequest_Future {
	return SurveyRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p SurveyPacket_Future) Response() SurveyResponse_Future {
	return SurveyResponse_Future{Future: p.Future.Field(0, nil)}
}

const schema_ef83879a531f9bf3 = "x\xdat\x90\xbf\xab\xd3P\x1c\xc5\xcf\xf9\xde\xd7F0" +
	"\x81\x84\xbcQy \x0a>\xf0\xe9+*\x88\x0a\x16\xa1" +
	"\xa0\xe2\xd0\x9bV\\\\B\xbcbQ\xd3\x98\xa4\x95N" +
	"\x0e\x0e\xe2\xe8\xd0E\xff\x01\xc1\xc1\xc1Q\x07\xff\x057" +
	"\xff\x0b\x7fM\x16\xf4J\xd2_R|\xeb\xbd\x87\xef\xe7" +
	"\x9c\x8f\xff\xb9-\xad\xc6P\x00}\xa4\xd1\xb4\xf7\xfa\xf7" +
	"\xdb\xb3\xcc{\x8b \xa0\xfd\xf9z\xa7\xf7\xea\xf9\xb3\xaf" +
	"h\x88\x03\x9c=Ja\xb8K\x07\x08O\xf0\x09h\xcf" +
	"\x97o>\x1d\xbe}\xeb\x03t\xc0\x7f\xd2\x1d:\x02\x84" +
	"/\xf8#\x9c\xd6\xe9\x97u:\x9a\xbe\xbf4\xfb\xf8\xe5" +
	"\xdbF\xba\xbe\x1d~\xe7,\xfc]\x87\x7f\xf1\x1d\xf6l" +
	"\x9c\x0d\xce\x14\xa3|\xac\xcc\xe4t\x12giv\xb17" +
	"\xca\xc7f\x12\x99\"\x1b\xa6\x85A\x97\xd4\x87\xd4\x16\xb0" +
	"E \xd8\x8d\x00}RQ\x9f\x13\x06\xe46\xab\xc7\xd6" +
	"\x0d@\xef+\xea\xcbB\x9b\xc6\x8fL\x91\xc5\x09h\xe8" +
	"B\xe8\x82\xd6\xa4c\xf3p\x98\x19\x00\xf4 \xf4\xc0\x15" +
	"X6\xc0\xdd\x9d8y`\xca\x05\xd6\xb5v\xce\xbd\x0a" +
	"\xe8\xe3\x8az_\xe8\xf1\x8f\x9d\x83\xf7*\xf0)E}" +
	"A\xf847\x8fG\xa6(\xe9\xaf\x05\x80\xf4A\x9b/" +
	"\xb7\x00\xf4\xd7\xe6\x17\xbf\x07\x15\x89\xae\xcc\x0fVM\xdc" +
	"\x95\x80\xce1@\xb7\x15\xf5M\xe1r\xff\xf5\xaa\xc65" +
	"E\xdd\x17\x06\xc2m\x0a\x10\xe8\xcaTWQ\xdf\x11:" +
	"E\x9e\xac\x86\xdf\x1d\x14e\x9c&u\x9b&\x84M\xfc" +
	"W\xda\xdf\x00\x00\x00\xff\xff\xf1\x01\x8e%"

func init() {
	schemas.Register(schema_ef83879a531f9bf3,
		0xab0d70fa40685466,
		0xbb55570bc0a87435,
		0xf0d8bcfa3bb39552)
}
