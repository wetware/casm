// Code generated by capnpc-go. DO NOT EDIT.

package survey

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	strconv "strconv"
)

type Packet struct{ capnp.Struct }
type Packet_Which uint16

const (
	Packet_Which_request  Packet_Which = 0
	Packet_Which_response Packet_Which = 1
)

func (w Packet_Which) String() string {
	const s = "requestresponse"
	switch w {
	case Packet_Which_request:
		return s[0:7]
	case Packet_Which_response:
		return s[7:15]

	}
	return "Packet_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Packet_TypeID is the unique identifier for the type Packet.
const Packet_TypeID = 0xa5f0e7e131b13496

func NewPacket(s *capnp.Segment) (Packet, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Packet{st}, err
}

func NewRootPacket(s *capnp.Segment) (Packet, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Packet{st}, err
}

func ReadRootPacket(msg *capnp.Message) (Packet, error) {
	root, err := msg.Root()
	return Packet{root.Struct()}, err
}

func (s Packet) String() string {
	str, _ := text.Marshal(0xa5f0e7e131b13496, s.Struct)
	return str
}

func (s Packet) Which() Packet_Which {
	return Packet_Which(s.Struct.Uint16(0))
}
func (s Packet) Namespace() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Packet) HasNamespace() bool {
	return s.Struct.HasPtr(0)
}

func (s Packet) NamespaceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Packet) SetNamespace(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Packet) Request() (Packet_Request, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != request")
	}
	p, err := s.Struct.Ptr(1)
	return Packet_Request{Struct: p.Struct()}, err
}

func (s Packet) HasRequest() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(1)
}

func (s Packet) SetRequest(v Packet_Request) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewRequest sets the request field to a newly
// allocated Packet_Request struct, preferring placement in s's segment.
func (s Packet) NewRequest() (Packet_Request, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewPacket_Request(s.Struct.Segment())
	if err != nil {
		return Packet_Request{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Packet) Response() ([]byte, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != response")
	}
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Packet) HasResponse() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(1)
}

func (s Packet) SetResponse(v []byte) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetData(1, v)
}

// Packet_List is a list of Packet.
type Packet_List struct{ capnp.List }

// NewPacket creates a new list of Packet.
func NewPacket_List(s *capnp.Segment, sz int32) (Packet_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Packet_List{l}, err
}

func (s Packet_List) At(i int) Packet { return Packet{s.List.Struct(i)} }

func (s Packet_List) Set(i int, v Packet) error { return s.List.SetStruct(i, v.Struct) }

func (s Packet_List) String() string {
	str, _ := text.MarshalList(0xa5f0e7e131b13496, s.List)
	return str
}

// Packet_Future is a wrapper for a Packet promised by a client call.
type Packet_Future struct{ *capnp.Future }

func (p Packet_Future) Struct() (Packet, error) {
	s, err := p.Future.Struct()
	return Packet{s}, err
}

func (p Packet_Future) Request() Packet_Request_Future {
	return Packet_Request_Future{Future: p.Future.Field(1, nil)}
}

type Packet_Request struct{ capnp.Struct }

// Packet_Request_TypeID is the unique identifier for the type Packet_Request.
const Packet_Request_TypeID = 0xfc96eef0cc93ef50

func NewPacket_Request(s *capnp.Segment) (Packet_Request, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Packet_Request{st}, err
}

func NewRootPacket_Request(s *capnp.Segment) (Packet_Request, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Packet_Request{st}, err
}

func ReadRootPacket_Request(msg *capnp.Message) (Packet_Request, error) {
	root, err := msg.Root()
	return Packet_Request{root.Struct()}, err
}

func (s Packet_Request) String() string {
	str, _ := text.Marshal(0xfc96eef0cc93ef50, s.Struct)
	return str
}

func (s Packet_Request) Src() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Packet_Request) HasSrc() bool {
	return s.Struct.HasPtr(0)
}

func (s Packet_Request) SetSrc(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Packet_Request) Distance() uint8 {
	return s.Struct.Uint8(0)
}

func (s Packet_Request) SetDistance(v uint8) {
	s.Struct.SetUint8(0, v)
}

// Packet_Request_List is a list of Packet_Request.
type Packet_Request_List struct{ capnp.List }

// NewPacket_Request creates a new list of Packet_Request.
func NewPacket_Request_List(s *capnp.Segment, sz int32) (Packet_Request_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Packet_Request_List{l}, err
}

func (s Packet_Request_List) At(i int) Packet_Request { return Packet_Request{s.List.Struct(i)} }

func (s Packet_Request_List) Set(i int, v Packet_Request) error { return s.List.SetStruct(i, v.Struct) }

func (s Packet_Request_List) String() string {
	str, _ := text.MarshalList(0xfc96eef0cc93ef50, s.List)
	return str
}

// Packet_Request_Future is a wrapper for a Packet_Request promised by a client call.
type Packet_Request_Future struct{ *capnp.Future }

func (p Packet_Request_Future) Struct() (Packet_Request, error) {
	s, err := p.Future.Struct()
	return Packet_Request{s}, err
}

const schema_ef83879a531f9bf3 = "x\xdaL\xce\xb1J#Q\x18\x05\xe0s\xee$\x99-" +
	"\x12\xc8\x90@\xb6\x09\x0b\xcb6\x0b\x9b\xb0\x81-\x16+" +
	"\x09\x06D\x10\xe6\x8f\x966\xc3x\x0b\x09\x8e\xe3\xdc\x89" +
	"b\x95\xc2\xc2\x07\x10Rhe\xc0\xc2B\xc4\xf7\xf0%" +
	"\xb4\xb13\x11+A\xbc2Q\x13\xbb\x9f\x03\xff9_" +
	"y\xb4\xa8Z\xf9\x9a\x02\xe4{\xbe`\x87\xff\xae[\xb7" +
	"\xf7\x93sH\x89\xb4O\xa7?\xd6N\x8e\x0e\xc7\xe8(" +
	"W\x01\xde\xe3\xc8{\xae\x01\x15\xf2\x0a\xb4\xfe\xf8\xf8f" +
	"\xf20|\x81T\xc9\xf9g\x9e.P9\xe3]\xe5r" +
	"z]p\x1f\x0dk\xfa\xc9\x9e>h\x86\x0c\xe2(^" +
	"\xf0\x83\xd0\xed\xe9Tr\xfcR\xe3\xb1=\xe8\xea\xdd\xbe" +
	"6\xa9\x14\x9d\x1c\x90#\xe0u\xba\x80,9\x14_\xb1" +
	"NkYe\x16\xaf\xb6\x01Yv(\xeb\x8au\xf5\x9a" +
	"\xc5\x99PV\x00\xf1\x1d\xca\x86\xa2\x8d\x82mm\xe2 " +
	"\x045\x8bP,\x82\x83\xe4}\x80\xe5\xf9.\xc82h" +
	"\x13m\xe2\x9d\xc8h\x00,A\xb1\x04\xce\xd4\xeaS\xdd" +
	"\xd3i33\xba\xda\xa4>)\xdff\xce\xdf?\x01\xf9" +
	"\xe5P\xfe*\xf2\x03\xd9\xc84\x7f\x1c\xca\x7fE\xd7$" +
	"\xe1\xacws\xcb\xa4A\x14N\xb7\x0aP,\x80o\x01" +
	"\x00\x00\xff\xff\x87\xc1jL"

func init() {
	schemas.Register(schema_ef83879a531f9bf3,
		0xa5f0e7e131b13496,
		0xfc96eef0cc93ef50)
}
